<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiyi.exa.server.dao.PaperInfoMapper">
    <resultMap id="BaseResultMap" type="com.libiyi.exa.server.entity.PaperInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
        <result column="pname" jdbcType="VARCHAR" property="name" />
        <result column="question_list" jdbcType="LONGVARCHAR" property="questionList" />
        <result column="avg_points" jdbcType="INTEGER" property="avgPoints" />
        <result column="counts" jdbcType="INTEGER" property="counts" />
        <result column="create_user" jdbcType="INTEGER" property="createUser" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    </resultMap>
    <insert id="createPaperInfo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO paper_info(subject_id, pname, question_list, create_user, create_time, update_time) VALUE (#{p.subjectId}, #{p.name},  #{p.questionList}, #{p.createUser}, #{p.createTime}, #{p.updateTime})
    </insert>

    <select id="getByParam" resultMap="BaseResultMap">
        SELECT id, subject_id, pname, question_list, avg_points, counts, create_user, create_time, update_time FROM paper_info WHERE subject_id=#{subjectId} ORDER BY create_time DESC LIMIT #{offset},#{size}
    </select>

    <select id="getCountsByParam" resultType="Integer">
        SELECT COUNT(1)FROM paper_info WHERE subject_id=#{subjectId}
    </select>

    <update id="updateById">
        UPDATE paper_info SET subject_id=#{p.subjectId}, pname=#{p.name}, question_list=#{p.questionList}, update_time=#{q.updateTime} WHERE id=#{p.id}
    </update>

    <update id="updateAvgAndCountsByIdAndPoints">
        UPDATE paper_info SET avg_points = (counts*avg_points+#{points})/(counts+1), counts = counts+1 WHERE id=#{id}
    </update>

    <select id="getById" resultMap="BaseResultMap">
        SELECT id, subject_id, pname, question_list, avg_points, counts, create_user, create_time, update_time FROM paper_info WHERE id=#{id}
    </select>

    <select id="getThreeBySubjectId" resultMap="BaseResultMap">
        SELECT id, subject_id, pname, question_list, avg_points, counts, create_user, create_time, update_time FROM paper_info WHERE subject_id=#{subjectId} AND id != #{id} ORDER BY counts DESC LIMIT 0,3
    </select>


</mapper>